                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                        JOIN                      ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

A JOIN clause is used to combine rows from two or more tables, based on a related column between them.

(INNER) JOIN: Returns records that have matching values in both tables

CREATE table city(
cid int,
cityname varchar(20),
primary key(cid)
);

CREATE table personal(
id int,
name varchar(20),
percentage int,
age int,
gender varchar(10),
city int,
foreign key(city) references city(cid)
);


INSERT INTO city values(1,'Agra'),(2,'Delhi'),(3,'Bhopal'),(4,'Jaipur'),(5,'Noida');

INSERT INTO personal values(1,'Ram',45,19,'M',1),
(2,'Sarita',55,22,'F',2),
(3,'Salman',62,20,'M',1),
(4,'Juhi',47,18,'F',3),
(5,'Anil',74,22,'M',1),
(6,'John',64,21,'M',2),
(7,'Sahid',52,20,'M',1);


mysql> SELECT * from personal INNER JOIN city ON personal.city=city.cid;
+------+--------+------------+------+--------+------+-----+----------+
| id   | name   | percentage | age  | gender | city | cid | cityname |
+------+--------+------------+------+--------+------+-----+----------+
|    1 | Ram    |         45 |   19 | M      |    1 |   1 | Agra     |
|    3 | Salman |         62 |   20 | M      |    1 |   1 | Agra     |
|    5 | Anil   |         74 |   22 | M      |    1 |   1 | Agra     |
|    7 | Sahid  |         52 |   20 | M      |    1 |   1 | Agra     |
|    2 | Sarita |         55 |   22 | F      |    2 |   2 | Delhi    |
|    6 | John   |         64 |   21 | M      |    2 |   2 | Delhi    |
|    4 | Juhi   |         47 |   18 | F      |    3 |   3 | Bhopal   |
+------+--------+------------+------+--------+------+-----+----------+
7 rows in set (0.00 sec)

-- You can see jaipur and noida is not there in the output because there is no entry in city which lives in noida/jaipur.

SELECT personal.name,personal.percentage,personal.age,personal.gender,city.cityname from personal  INNER JOIN city ON pe
rsonal.city=city.cid;

                                                         OR

SELECT p.name,p.percentage,p.age,p.gender,c.cityname from personal as p INNER JOIN city as c ON p.city=c.cid;
(note: now you cannot write city/personal in place of c/p).

+--------+------------+------+--------+----------+
| name   | percentage | age  | gender | cityname |
+--------+------------+------+--------+----------+
| Ram    |         45 |   19 | M      | Agra     |
| Salman |         62 |   20 | M      | Agra     |
| Anil   |         74 |   22 | M      | Agra     |
| Sahid  |         52 |   20 | M      | Agra     |
| Sarita |         55 |   22 | F      | Delhi    |
| John   |         64 |   21 | M      | Delhi    |
| Juhi   |         47 |   18 | F      | Bhopal   |
+--------+------------+------+--------+----------+
7 rows in set (0.00 sec)



                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                   LEFT JOIN                      ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table

CREATE table personal(
id int,
name varchar(20),
age int,
city int
);

mysql> delete from personal;
mysql> delete from city;

INSERT INTO city values(1,'Agra'),(2,'Bhopal'),(3,'Delhi'),(4,'Noida');

INSERT INTO personal(id,name,age,city) values(1,'Ram',19,1),
(2,'Salman',18,2),
(3,'Meera',19,null),
(4,'Sarita',21,3);


mysql> select*from city;
+-----+----------+
| cid | cityname |
+-----+----------+
|   1 | Agra     |
|   2 | Bhopal   |
|   3 | Delhi    |
|   4 | Noida    |
+-----+----------+
4 rows in set (0.00 sec)


mysql> select*from personal;
+------+--------+------+------+
| id   | name   | age  | city |
+------+--------+------+------+
|    1 | Ram    |   19 |    1 |
|    2 | Salman |   18 |    2 |
|    3 | Meera  |   19 | NULL |
|    4 | Sarita |   21 |    3 |
+------+--------+------+------+
4 rows in set (0.01 sec)



SELECT * from personal LEFT JOIN city ON personal.city=city.cid;
+------+--------+------+------+------+----------+
| id   | name   | age  | city | cid  | cityname |
+------+--------+------+------+------+----------+
|    1 | Ram    |   19 |    1 |    1 | Agra     |
|    2 | Salman |   18 |    2 |    2 | Bhopal   |
|    4 | Sarita |   21 |    3 |    3 | Delhi    |
|    3 | Meera  |   19 | NULL | NULL | NULL     |
+------+--------+------+------+------+----------+
4 rows in set (0.00 sec)

--Note: if it is inner join ,then meera will not be there.
--Writing null is very important.

                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                  RIGHT JOIN                      ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table

mysql> SELECT * from personal RIGHT JOIN city ON personal.city=city.cid;
+------+--------+------+------+-----+----------+
| id   | name   | age  | city | cid | cityname |
+------+--------+------+------+-----+----------+
|    1 | Ram    |   19 |    1 |   1 | Agra     |
|    2 | Salman |   18 |    2 |   2 | Bhopal   |
|    4 | Sarita |   21 |    3 |   3 | Delhi    |
| NULL | NULL   | NULL | NULL |   4 | Noida    |
+------+--------+------+------+-----+----------+
4 rows in set (0.00 sec)



                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                  CROSS JOIN                      ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

No need of any primary key /foreign key for performing cross join.

mysql> SELECT * from personal CROSS JOIN city;
+------+--------+------+------+-----+----------+
| id   | name   | age  | city | cid | cityname |
+------+--------+------+------+-----+----------+
|    1 | Ram    |   19 |    1 |   1 | Agra     |
|    2 | Salman |   18 |    2 |   1 | Agra     |
|    3 | Meera  |   19 | NULL |   1 | Agra     |
|    4 | Sarita |   21 |    3 |   1 | Agra     |
|    1 | Ram    |   19 |    1 |   2 | Bhopal   |
|    2 | Salman |   18 |    2 |   2 | Bhopal   |
|    3 | Meera  |   19 | NULL |   2 | Bhopal   |
|    4 | Sarita |   21 |    3 |   2 | Bhopal   |
|    1 | Ram    |   19 |    1 |   3 | Delhi    |
|    2 | Salman |   18 |    2 |   3 | Delhi    |
|    3 | Meera  |   19 | NULL |   3 | Delhi    |
|    4 | Sarita |   21 |    3 |   3 | Delhi    |
|    1 | Ram    |   19 |    1 |   4 | Noida    |
|    2 | Salman |   18 |    2 |   4 | Noida    |
|    3 | Meera  |   19 | NULL |   4 | Noida    |
|    4 | Sarita |   21 |    3 |   4 | Noida    |
+------+--------+------+------+-----+----------+
16 rows in set (0.00 sec)

                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                  OTHER JOINS                     ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table
SELF JOIN: A self join is a regular join, but the table is joined with itself.