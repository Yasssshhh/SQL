use database trendytech;

mysql> desc students;
+-------------------------+-------------+------+-----+-------------------+-----------------------------+
| Field                   | Type        | Null | Key | Default           | Extra                       |
+-------------------------+-------------+------+-----+-------------------+-----------------------------+
| student_id              | int(11)     | NO   | PRI | NULL              | auto_increment              |
| student_fname           | varchar(30) | NO   |     | NULL              |                             |
| student_lname           | varchar(30) | NO   |     | NULL              |                             |
| student_mname           | varchar(30) | YES  |     | NULL              |                             |
| student_email           | varchar(30) | NO   | UNI | NULL              |                             |
| student_phone           | varchar(15) | NO   |     | NULL              |                             |
| student_alternate_phone | varchar(15) | YES  |     | NULL              |                             |
| enrollment_date         | timestamp   | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |
| selected_course         | int(11)     | NO   | MUL | 1                 |                             |
| years_of_exp            | int(11)     | NO   |     | NULL              |                             |
| student_company         | varchar(30) | YES  |     | NULL              |                             |
| batch_date              | varchar(30) | NO   |     | NULL              |                             |
| source_of_joining       | varchar(30) | NO   |     | NULL              |                             |
| location                | varchar(30) | NO   |     | NULL              |                             |
+-------------------------+-------------+------+-----+-------------------+-----------------------------+
14 rows in set (0.00 sec)

                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                    NOT EQUAL                     ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


select*from students where location !='bangalore';


select*from courses;
+-----------+-----------------+------------------------+------------+
| course_id | course_name     | course_duration_months | course_fee |
+-----------+-----------------+------------------------+------------+
|         1 | big data        |                      6 |      50000 |
|         2 | web development |                      3 |      20000 |
|         3 | data science    |                      6 |      40000 |
|         4 | dev ops         |                      1 |      10000 |
+-----------+-----------------+------------------------+------------+
4 rows in set (0.03 sec)

What if I wanted all courses having word data in them.

select * from courses where course_name like '%data%';

+-----------+--------------+------------------------+------------+
| course_id | course_name  | course_duration_months | course_fee |
+-----------+--------------+------------------------+------------+
|         1 | big data     |                      6 |      50000 |
|         3 | data science |                      6 |      40000 |
+-----------+--------------+------------------------+------------+
2 rows in set (0.00 sec)


What if I wanted all courses do not having word data in them.

mysql> select * from courses where course_name not like '%data%';
+-----------+-----------------+------------------------+------------+
| course_id | course_name     | course_duration_months | course_fee |
+-----------+-----------------+------------------------+------------+
|         2 | web development |                      3 |      20000 |
|         4 | dev ops         |                      1 |      10000 |
+-----------+-----------------+------------------------+------------+
2 rows in set (0.00 sec)

                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                    LESS THAN                     ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


All students having years_of_exp less than 8 form bangalore where source_of_joining is linknedin;

select * from students where years_of_exp < 8 and source_of_joining ='linknedin' and location='bangalore';
+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email   | student_phone | student_alternate_phone | enrollment_date
     | selected_course | years_of_exp | student_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
|          2 | rohit         | sharma        | NULL          | rohit@gmail.com | 9191919191    | NULL                    | 2022-09-12 11:5
9:51 |               2 |            6 | walmart         | 5-02-2021  | linknedin         | bangalore |
+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
1 row in set (0.00 sec)



I want all people who do not fall between 8 to 12 years of experience

select * from students where years_of_exp < 8 and years_of_exp>12;
Empty set (0.00 sec)


select * from students where years_of_exp < 8 or years_of_exp>12;
select * from students where years_of_exp not between 8 and 12;

+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email     | student_phone | student_alternate_phone | enrollment_da
te     | selected_course | years_of_exp | student_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
|          2 | rohit         | sharma        | NULL          | rohit@gmail.com   | 9191919191    | NULL                    | 2022-09-12 11
:59:51 |               2 |            6 | walmart         | 5-02-2021  | linknedin         | bangalore |
|          5 | kapil         | dev           | NULL          | kapil@gmail.com   | 9291292292    | NULL                    | 2022-09-12 11
:59:52 |               1 |           15 | microsoft       | 5-02-2021  | friend            | pune      |
|          6 | brain         | lara          | NULL          | brain@gmail.com   | 929127292     | NULL                    | 2022-09-12 11
:59:52 |               1 |           18 | tcs             | 5-02-2021  | youtube           | pune      |
|          7 | carl          | hooper        | NULL          | carl@gmail.com    | 929127392     | NULL                    | 2022-09-12 11
:59:52 |               1 |           20 | wipro           | 19-02-2021 | youtube           | pune      |
|          8 | saurabh       | ganguly       | NULL          | saurabh@gmail.com | 929127492     | NULL                    | 2022-09-12 11
:59:52 |               1 |           14 | wipro           | 19-02-2021 | google            | chennai   |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
5 rows in set (0.00 sec)


select * from students where years_of_exp between 8 and 12;
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email     | student_phone | student_alternate_phone | enrollment_da
te     | selected_course | years_of_exp | student_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
|          3 | shikhar       | dhawan        | NULL          | shikhar@gmail.com | 9393939393    | NULL                    | 2022-09-12 11
:59:51 |               1 |           12 | google          | 12-02-2021 | linknedin         | bangalore |
|          4 | rahul         | dravid        | NULL          | rahul@gmail.com   | 9494949494    | NULL                    | 2022-09-12 11
:59:51 |               3 |            8 | walmart         | 19-02-2021 | quora             | chennai   |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+--------------
-------+-----------------+--------------+-----------------+------------+-------------------+-----------+
2 rows in set (0.00 sec)


                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                        OR                        ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



Now I want to get no of students working for flipkart, walmart or microsoft.

select * from students where student_company='flipkart' or student_company='walmart'or student_company='microsoft';

+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email   | student_phone | student_alternate_phone | enrollment_date
     | selected_course | years_of_exp | student_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
|          2 | rohit         | sharma        | NULL          | rohit@gmail.com | 9191919191    | NULL                    | 2022-09-12 11:5
9:51 |               2 |            6 | walmart         | 5-02-2021  | linknedin         | bangalore |
|          4 | rahul         | dravid        | NULL          | rahul@gmail.com | 9494949494    | NULL                    | 2022-09-12 11:5
9:51 |               3 |            8 | walmart         | 19-02-2021 | quora             | chennai   |
|          5 | kapil         | dev           | NULL          | kapil@gmail.com | 9291292292    | NULL                    | 2022-09-12 11:5
9:52 |               1 |           15 | microsoft       | 5-02-2021  | friend            | pune      |
+------------+---------------+---------------+---------------+-----------------+---------------+-------------------------+----------------
-----+-----------------+--------------+-----------------+------------+-------------------+-----------+
3 rows in set (0.00 sec)


                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                      IN                          ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The IN operator allows you to specify multiple values in a WHERE clause.
The IN operator is a shorthand for multiple OR conditions.

select * from students where student_company in('flipkart','walmart','microsoft');
SELECT column_name(s)
FROM table_name
WHERE column_name IN (value1, value2, ...);


If a course is more than 4 months we categorize it as master program else it is a diploma.


select * from courses;
+-----------+-----------------+------------------------+------------+
| course_id | course_name     | course_duration_months | course_fee |
+-----------+-----------------+------------------------+------------+
|         1 | big data        |                      6 |      50000 |
|         2 | web development |                      3 |      20000 |
|         3 | data science    |                      6 |      40000 |
|         4 | dev ops         |                      1 |      10000 |
+-----------+-----------------+------------------------+------------+
4 rows in set (0.04 sec)

Three columns are directly from columns and we 4 column is what we want to derive from some logic.


                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                    BETWEEN                       ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

The BETWEEN operator selects values within a given range.
The BETWEEN operator is inclusive: begin and end values are included. 

SELECT column_name(s)
FROM table_name
WHERE column_name BETWEEN value1 AND value2;

SELECT * FROM Products
WHERE Price NOT BETWEEN 10 AND 20;

                                             ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                      DISTINCT                    ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Lets say we have a problem statement that I want to check from which all locations the students have joining the course.

select location from students;
+-----------+
| location  |
+-----------+
| bangalore |
| bangalore |
| chennai   |
| pune      |
| pune      |
| pune      |
| chennai   |
+-----------+
7 rows in set (0.00 sec)

You can see that this is showing redundant data and I dont want that.

select distinct location from students;
+-----------+
| location  |
+-----------+
| bangalore |
| chennai   |
| pune      |
+-----------+
3 rows in set (0.00 sec)


select distinct student_company from students;
---this might have a null also as it is not a mandatory column---

+-----------------+
| student_company |
+-----------------+
| walmart         |
| google          |
| microsoft       |
| tcs             |
| wipro           |
+-----------------+


                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                      ORDER BY                    ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

select student_fname from students;

+---------------+
| student_fname |
+---------------+
| rohit         |
| shikhar       |
| rahul         |
| kapil         |
| brain         |
| carl          |
| saurabh       |
+---------------+
7 rows in set (0.00 sec)


mysql> select student_id, student_fname, years_of_exp from students ORDER BY years_of_exp ;
+------------+---------------+--------------+
| student_id | student_fname | years_of_exp |
+------------+---------------+--------------+
|          2 | rohit         |            6 |
|          4 | rahul         |            8 |
|          3 | shikhar       |           12 |
|          8 | saurabh       |           14 |
|          5 | kapil         |           15 |
|          6 | brain         |           18 |
|          7 | carl          |           20 |
+------------+---------------+--------------+

This order by need not to be the part of select.
SELECT student_id FROM students ORDER BY years_of_exp;

If you want year of experience at top you can use desc(descending).

select student_id, student_fname, years_of_exp from students ORDER BY years_of_exp desc;
+------------+---------------+--------------+
| student_id | student_fname | years_of_exp |
+------------+---------------+--------------+
|          7 | carl          |           20 |
|          6 | brain         |           18 |
|          5 | kapil         |           15 |
|          8 | saurabh       |           14 |
|          3 | shikhar       |           12 |
|          4 | rahul         |            8 |
|          2 | rohit         |            6 |
+------------+---------------+--------------+


---You can also sort it on basis of column number---
select student_id, student_fname, years_of_exp from students ORDER BY 3 desc;

select student_id, student_fname, years_of_exp from students ORDER BY years_of_exp,student_fname desc;

--First this query will order by years of exp(people with lowest years of exp will come at top) and then 
---it will do a second level sorting based on first name.---

--3 (now it will sort fname in these common values)
--3
--3
--4
--5
--8

                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                      LIMIT                       ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

If I want just 3 records.
---there is no relevent data,no ordering na, specific data---

SELECT*from students limit 3;

+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email     | student_phone | student_alternate_phone | enrollment_date     | selected_course | years_of_exp | s
tudent_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+
|          2 | rohit         | sharma        | NULL          | rohit@gmail.com   | 9191919191    | NULL                    | 2022-09-12 11:59:51 |               2 |            6 | w
almart         | 5-02-2021  | linknedin         | bangalore |
|          3 | shikhar       | dhawan        | NULL          | shikhar@gmail.com | 9393939393    | NULL                    | 2022-09-12 11:59:51 |               1 |           12 | g
oogle          | 12-02-2021 | linknedin         | bangalore |
|          4 | rahul         | dravid        | NULL          | rahul@gmail.com   | 9494949494    | NULL                    | 2022-09-12 11:59:51 |               3 |            8 | w
almart         | 19-02-2021 | quora             | chennai   |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+

Limit must be used with order by to get the proper results.
---Get 3 candidates with least experience---

SELECT student_id, student_fname, years_of_exp FROM students ORDER BY years_of_exp LIMIT 3;

+------------+---------------+--------------+
| student_id | student_fname | years_of_exp |
+------------+---------------+--------------+
|          2 | rohit         |            6 |
|          4 | rahul         |            8 |
|          3 | shikhar       |           12 |
+------------+---------------+--------------+

---For the last 5 people who have joined the course i want to see source from where they have joined---

SELECT source_of_joining FROM students ORDER BY enrollment_date DESC LIMIT 5; 
---desc because we want last 5 no---
+-------------------+
| source_of_joining |
+-------------------+
| google            |
| friend            |
| youtube           |
| youtube           |
| linknedin         |
+-------------------+
5 rows in set (0.00 sec)

---To get person who has joined very last---

SELECT student_id, student_fname, years_of_exp FROM students ORDER BY enrollment_date DESC LIMIT 1;

+------------+---------------+--------------+
| student_id | student_fname | years_of_exp |
+------------+---------------+--------------+
|          8 | saurabh       |           14 |
+------------+---------------+--------------+
1 row in set (0.00 sec)



---This 0 here is offset and is used to skip top 3 records---
SELECT*FROM students ORDER BY enrollment_date LIMIT 3,3;

--It will give you first 3 candidates---

+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+
| student_id | student_fname | student_lname | student_mname | student_email     | student_phone | student_alternate_phone | enrollment_date     | selected_course | years_of_exp | s
tudent_company | batch_date | source_of_joining | location  |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+
|          2 | rohit         | sharma        | NULL          | rohit@gmail.com   | 9191919191    | NULL                    | 2022-09-12 11:59:51 |               2 |            6 | w
almart         | 5-02-2021  | linknedin         | bangalore |
|          3 | shikhar       | dhawan        | NULL          | shikhar@gmail.com | 9393939393    | NULL                    | 2022-09-12 11:59:51 |               1 |           12 | g
oogle          | 12-02-2021 | linknedin         | bangalore |
|          4 | rahul         | dravid        | NULL          | rahul@gmail.com   | 9494949494    | NULL                    | 2022-09-12 11:59:51 |               3 |            8 | w
almart         | 19-02-2021 | quora             | chennai   |
+------------+---------------+---------------+---------------+-------------------+---------------+-------------------------+---------------------+-----------------+--------------+--
---------------+------------+-------------------+-----------+
3 rows in set (0.00 sec)


                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                              ++++                        LIKE                      ++++ 
                                              ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                                              
The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.
Like does the same work as where clause.(where does the exact match but what if you want to do a fuzzy match you can use like)

SELECT column1, column2, ...
FROM table_name
WHERE columnN LIKE pattern;

WILDCARDS:

There are two wildcards often used in conjunction with the LIKE operator:

 The percent sign (%) represents zero, one, or multiple characters
 The underscore sign (_) represents one, single character


---Give me all students whose firstname has ra----
select student_id, student_fname, years_of_exp from students WHERE student_fname LIKE '%ra%';

---Give me all students whose firstname starts with ra----
select student_id, student_fname, years_of_exp from students WHERE student_fname LIKE 'ra%';


---Give me all students whose firstname end with ra----
select student_id, student_fname, years_of_exp from students WHERE student_fname LIKE '%ra';

---Give me all students whose firstname does not end with ra----
select student_id, student_fname, years_of_exp from students WHERE student_fname NOT LIKE '%ra';

---Get all names who have 5 characters in their first name---
select student_id, student_fname, years_of_exp from students WHERE student_fname LIKE '_____';


Lets say in extreme scenerio your data has a % character.

Example:ROHI%T
Such things you can avoid using backslash character ROHI\%T.
You can escape like this.

---Give me all students whose firstname end with %ra----
SELECT student_id, student_fname, years_of_exp from students WHERE student_fname LIKE '%\%ra';